---
import { getCollection, getEntries } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "src/layouts/BaseLayout.astro";
import { formatDate } from "@js/utils";
import FeaturedPost from "@components/FeaturedPost.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { post: post.slug },
    props: { post: post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

const authors = await getEntries(post.data.author);
---

<BaseLayout
  title={post.data.title}
  description={post.body
    .split(" ")
    .slice(0, 20)
    .join(" ")
    .replace(/[#*_\`]/g, "")
    .replace(/\[([^\]]+)\]\([^\)]+\)/g, "$1")
    .trim() + (post.body.split(" ").length > 20 && "...")}
>
  <article id="blog-post">
    {
      post.data.image && (
        <picture>
          <Image
            src={post.data.image}
            alt={post.data.imageAlt ? post.data.imageAlt : post.data.title}
            width={post.data.image.width}
            height={post.data.image.height}
            decoding="async"
          />
        </picture>
      )
    }

    <div id="blog-post-details">
      <h1 id={post.data.title}>{post.data.title}</h1>
      <div>
        {
          authors.map((author) => (
            <div>
                <picture>
                  <Image
                    src={
                      typeof author.data.photo === "object" && author.data.photo !== null
                        ? author.data.photo.src.replace(
                            /^.*\/src\/assets\//,
                            "/src/assets/",
                          )
                        : "/assets/svgs/profile.svg"
                    }
                    alt={author.data.name}
                    width="32"
                    height="32"
                    decoding="async"
                  />
                </picture>
              <p>{author.data.name}</p>
            </div>
          ))
        }
        {
          post.data.date && (
            <p>{formatDate(post.data.date)}</p>
          )
        }
      </div>
    </div>
    <section id="blog-post-content">
      <Content />
    </section>
  </article>
</BaseLayout>
<FeaturedPost />
